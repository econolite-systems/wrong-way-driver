trigger:
  branches:
    include:
    - main
    - rc/*
    - develop
    - feature/*
  paths:
    include:
    - common
    - status
    - CorbinConnectIts
    - azure-pipeline.yml
    - wrong-way-driver.sln
    - devops

variables:
# Version information
- name: version.major
  value: 1
- name: version.minor
  value: 0

  # Name for the container publish to be used by release
- name: imageRepository
  value: 'ode-corbin-connectits-service'
  # Path from root where Dockerfile lives
- name: dockerfilePath
  value: './$(Build.Repository.Name)/CorbinConnectIts/CorbinConnectItsConsumer/Dockerfile'

  # Container registry service connection established during pipeline creation
# - group: Azure Artifacts
- name: dockerRegistryServiceConnection
  value: 'bf0a15b0-1048-4382-ad57-fbcd0cd84622'
- name: containerRegistry
  value: 'cosysdev.azurecr.io'

pool:
  name: 'DockerAgents'

resources:
  repositories:
  - repository: templates
    type: git
    name: DevOps/templates
    ref: refs/tags/1.2

stages:
- template: buildversion.yml@templates
  parameters:
    major: $(version.major)
    minor: $(version.minor)

# Building and pushing contianer
- stage: Build
  displayName: Build and push stage
  condition: always()
  jobs: 
  - job: 
    displayName: Build
    steps:
    - checkout: self
      submodules: true
      persistCredentials: true
    - checkout: templates
    - task: Bash@3
      displayName: Version Files
      inputs:
        filePath: 'templates/versionfiles.sh'
        workingDirectory: 'templates'

    - task: Docker@2
      displayName: Build docker
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        command: 'build'
        Dockerfile: '$(dockerfilePath)'
        tags: '$(Build.BuildNumber)'
        # arguments: '--build-arg PAT=$(artifacts.pat) --build-arg FEED_URL=$(artifacts.feed) --build-arg BUILD_TARGET=release'
        buildContext: './$(Build.Repository.Name)/'
    - task: Docker@2
      displayName: Push docker image to Registry
      # Example if we wanted to filter pushing images to only be done for master
      # condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
      inputs:
        containerRegistry: 'Docker Container Registry'
        repository: '$(imageRepository)'
        command: 'push'
        tags: '$(Build.BuildNumber)'
    # Publish helm files for the release
    - task: PublishPipelineArtifact@1
      displayName: 'Publish Helm Artifact for Release'
      inputs:
        targetPath: './$(Build.Repository.Name)/devops/helm-charts'
        artifact: drop